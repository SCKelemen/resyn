data IList a where
	INil :: IList a
	ICons :: x: a -> xs: IList {a | x < _v} -> IList a
  
termination measure ilen :: IList a -> {Int | _v >= 0} where
  INil -> 0
  ICons x xs -> 1 + ilen xs  

measure ielems :: IList a -> Set a where
  INil -> []
  ICons x xs -> [x] + ielems xs

range :: lo: Int -> hi: {Int | _v >= lo | _v - lo} -> {IList {a | lo <= _v <= hi} | len _v == (hi - lo)}
range = ??