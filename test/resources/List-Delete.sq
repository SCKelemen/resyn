qualifier {x == y, x != y}

data List a where
	Nil :: List a
	Cons :: x: {1**a| |1} -> xs: List a -> List a
  
termination measure len :: List a -> {Int | _v >= 0} where
  Nil -> 0
  Cons x xs -> 1 + len xs  

measure elems :: List a -> Set a where
  Nil -> []
  Cons x xs -> [x] + elems xs
	
delete :: x: a -> xs: List {1**a| |1} -> {List a | elems _v == elems xs - [x]}
delete = \x. \xs.
  match xs with
    Nil -> Nil
    Cons y ys -> 
      if y == x
        then delete x ys 
        else Cons y (delete x ys)