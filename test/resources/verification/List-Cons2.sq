-- Simple model of list memory semantics:
--   Constructing an element of a list requires enough heap space 
--   for the polymorphic type and a pointer to the next one.
--   We assume Nil requires no memory
data List a where
	Nil :: List a
	Cons :: x: {1**a| |1} -> xs: List a -> List a
 
-- Requires enough heap cells for 2 list nodes, given 1
--  Should fail
cons2 :: x: {2 ** a | | 2} -> List a
cons2 = \x. Cons x (Cons x Nil)