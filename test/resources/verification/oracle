Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
contains :: x:{1**a||0} -> t:{BST {1**a||1}||0} -[1]-> {Bool|_v == (x in elems t)|0}
contains = \x . \t . 
    match t with
      Empty -> False
      Node y l r -> 
        if x < y
          then contains x l
          else 
            if y < x
              then contains x r
              else True

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
contains :: x:{1**a||0} -> t:{BST {1**a||1}||0} -[3]-> {Bool|_v == (x in elems t)|0}
./BST-Contains-Bad.sq:18: Error:
  Insufficient resources
  when checking l ::
  {BST {1**a||p36 + 1}||3 + -(fp17 + 0)}
  in
  \x . \t . 
      match t with
        Node y l r -> 
          if x < y
            then contains x l
            else
              (?? :: {Bool|_v == (x in elems t)|0})

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
append :: xs:{List {1**a||1}||0} -> ys:{List {1**a||0}||0} -> {List {1**a||0}|len _v == len xs + len ys && elems _v == elems xs + elems ys|0}
append = \xs . \ys . 
    match xs with
      Nil -> ys
      Cons z zs -> Cons z (append zs
                             ys)

append2 :: xs:{List {1**a||0}||0} -> ys:{List {1**a||2}||0} -> zs:{List {1**a||1}||0} -> {List {1**a||0}|len _v == (len xs + len ys) + len zs && elems _v == (elems xs + elems ys) + elems zs|0}
append2 = \xs . \ys . \zs .
      append (append ys zs) xs

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
append :: xs:{List {1**a||1}||0} -> ys:{List {1**a||0}||0} -> {List {1**a||0}|len _v == len xs + len ys && elems _v == elems xs + elems ys|0}
append = \xs . \ys . 
    match xs with
      Nil -> ys
      Cons z zs -> Cons z (append zs
                             ys)

append2 :: xs:{List {1**a||0}||0} -> ys:{List {1**a||1}||0} -> zs:{List {1**a||1}||0} -> {List {1**a||0}|len _v == (len xs + len ys) + len zs && elems _v == (elems xs + elems ys) + elems zs|0}
./List-Append2-Bad.sq:26: Error:
  Insufficient resources
  when checking ys ::
  {List {1**a||p17 + 1}||-(fp14 + 0)}
  in
  \xs . \ys . \zs . append (append
                              ys ??) ??

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
append :: xs:{List {1**a||1}||0} -> ys:{List {1**a||0}||0} -[1]-> {List {1**a||0}|len _v == len xs + len ys && elems _v == elems xs + elems ys|0}
append = \xs . \ys . 
    match xs with
      Nil -> ys
      Cons z zs -> Cons z (append zs
                             ys)

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
append :: xs:{List {1**a||0}||0} -> ys:{List {1**a||0}||0} -[1]-> {List {1**a||0}|len _v == len xs + len ys && elems _v == elems xs + elems ys|0}
./List-Append-Bad.sq:19: Error:
  Insufficient resources
  when checking ys ::
  {List {1**a||p2}||1 + -(fp14 + 0)}
  in
  \xs . \ys . 
      match xs with
        Cons z zs -> Cons z (append zs
                               ys)

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
compress :: xs:{List {1**a||1}||0} -[1]-> {List {1**a||0}||0}
compress = \xs . 
  match xs with
    Nil -> Nil
    Cons y ys -> 
      match compress ys with
        Nil -> Cons y Nil
        Cons z zs -> 
          if y == z
            then Cons z zs
            else Cons y (Cons z zs)

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
compress :: xs:{List {1**a||0}||0} -[1]-> {List {1**a||0}||0}
./List-Compress-Bad.sq:16: Error:
  Insufficient resources
  when checking ys ::
  {List {1**a||p2}||1 + -(fp8 + 0)}
  in
  \xs . 
    match xs with
      Cons y ys -> 
        match compress ys with

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
cons2 :: x:{2**a||2} -> {List {1**a||0}||0}
cons2 = \x . Cons x (Cons x Nil)

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
cons2 :: x:{2**a||1} -> {List {1**a||0}||0}
./List-Cons2-Bad.sq:12: Error:
  Insufficient resources
  when checking Nil ::
  {List {1**a||p1}||1 + -(fp10 + 0)}
  in
  \x . Cons x (Cons x Nil)

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
append :: xs:{List {1**a||1} <0>||0} -> ys:{List {1**a||0} <0>||0} -> {List {1**a||0} <0>||0}
append = \xs . \ys . 
    match xs with
      Nil -> ys
      Cons z zs -> Cons z (append zs
                             ys)

attach :: <q :: Int> . x:{1**a||0} -> xs:{List {1**a||1 + q} <0>||0} -[1]-> {List {Pair {1**a||0}||q} <0>||0}
attach = \x . \xs . 
    match xs with
      Nil -> Nil
      Cons y ys -> Cons (Pair x y)
                     (attach x ys)

pairs :: xs:{List {1**a||2} <2>||0} -[1]-> {List {Pair {1**a||0}||0} <0>||0}
pairs = \xs . 
  match xs with
    Nil -> Nil
    Cons y ys -> append (attach y
                           ys) (pairs ys)

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
append :: xs:{List {1**a||1} <0>||0} -> ys:{List {1**a||0} <0>||0} -> {List {1**a||0} <0>||0}
append = \xs . \ys . 
    match xs with
      Nil -> ys
      Cons z zs -> Cons z (append zs
                             ys)

attach :: <q :: Int> . x:{1**a||0} -> xs:{List {1**a||1 + q} <0>||0} -[1]-> {List {Pair {1**a||0}||q} <0>||0}
attach = \x . \xs . 
    match xs with
      Nil -> Nil
      Cons y ys -> Cons (Pair x y)
                     (attach x ys)

pairs :: xs:{List {1**a||1} <2>||0} -[1]-> {List {Pair {1**a||0}||0} <0>||0}
./List-Pairs-Bad.sq:21: Error:
  Insufficient resources
  when checking ys ::
  {List {1**a||p28 + 1} <2>||1 + -(fp22 + 0)}
  in
  \xs . 
    match xs with
      Cons y ys -> append (attach y
                             ys) (pairs ys)

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
snoc :: x:{1**a||0} -> xs:{List {1**a||1} <0>||0} -[1]-> {List {1**a||0} <0>||0}
snoc = \x . \xs . 
    match xs with
      Nil -> Cons x Nil
      Cons y ys -> Cons y (snoc x ys)

reverse :: xs:{List {1**a||2} <1>||0} -[1]-> {List {1**a||0} <0>||0}
reverse = \xs . 
  match xs with
    Nil -> Nil
    Cons y ys -> snoc y (reverse ys)

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
snoc :: x:{1**a||0} -> xs:{List {1**a||1} <0>||0} -[1]-> {List {1**a||0} <0>||0}
snoc = \x . \xs . 
    match xs with
      Nil -> Cons x Nil
      Cons y ys -> Cons y (snoc x ys)

reverse :: xs:{List {1**a||1} <1>||0} -[1]-> {List {1**a||0} <0>||0}
./List-Reverse-Bad.sq:12: Error:
  Insufficient resources
  when checking ys ::
  {List {1**a||p17 + 1} <1>||1 + -(fp14 + 0)}
  in
  \xs . 
    match xs with
      Cons y ys -> snoc y (reverse ys)

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
insert :: x:{1**a||0} -> xs:{List {1**a||1} <0>||0} -[1]-> {List {1**a||0} <0>||0}
insert = \x . \xs . 
    match xs with
      Nil -> Cons x Nil
      Cons y ys -> 
        if y < x
          then Cons y (insert x ys)
          else Cons x (Cons y ys)

insertionSort :: xs:{List {1**a||2} <1>||0} -[1]-> {List {1**a||0} <0>||0}
insertionSort = \xs . 
  match xs with
    Nil -> Nil
    Cons y ys -> insert y
                   (insertionSort ys)

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
insert :: x:{1**a||0} -> xs:{List {1**a||1} <0>||0} -[1]-> {List {1**a||0} <0>||0}
insert = \x . \xs . 
    match xs with
      Nil -> Cons x Nil
      Cons y ys -> 
        if y < x
          then Cons y (insert x ys)
          else Cons x (Cons y ys)

insertionSort :: xs:{List {1**a||2} <0>||0} -[1]-> {List {1**a||0} <0>||0}
./List-InsertSort-Coarse-Bad.sq:22: Error:
  Insufficient resources
  when checking ys ::
  {List {1**a||p17 + 2} <0>||1 + -(fp14 + 0)}
  in
  \xs . 
    match xs with
      Cons y ys -> insert y
                     (insertionSort ys)

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
subsetSum :: arg1:{EList {Int||0} <2>||0} -> arg0:{Int||0} -[1]-> {Bool||0}
subsetSum = \xs . \target . 
    match xs with
      Nil -> target == 0
      Cons hd tl -> (subsetSum tl
                       (target - hd)) || (subsetSum tl
                                            target)

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
subsetSum :: arg1:{EList {Int||0} <2>||0} -> arg0:{Int||0} -[4]-> {Bool||0}
./List-Subset-Sum-Bad.sq:6: Error:
  Insufficient resources
  when checking - ::
  x14:_ -> x13:_ -> {Int||4 + -(fp22 + 0)}
  in
  \xs . \target . 
      match xs with
        Cons hd tl -> (subsetSum tl (??
                                       - ??)) || ??

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
insert :: x:{1**a||0} -> xs:{List {1**a||if _v < x then 1 else 0} <0>||0} -[1]-> {List {1**a||0} <0>||0}
insert = \x . \xs . 
    match xs with
      Nil -> Cons x Nil
      Cons y ys -> 
        if y < x
          then Cons y (insert x ys)
          else Cons x (Cons y ys)

insertionSort :: xs:{List {1**a||2} <if _1 < _0 then 1 else 0>||0} -[1]-> {List {1**a||0} <0>||0}
insertionSort = \xs . 
  match xs with
    Nil -> Nil
    Cons y ys -> insert y
                   (insertionSort ys)

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
insert :: x:{1**a||0} -> xs:{List {1**a||if _v < x then 1 else 0} <0>||0} -[1]-> {List {1**a||0} <0>||0}
insert = \x . \xs . 
    match xs with
      Nil -> Cons x Nil
      Cons y ys -> 
        if y < x
          then Cons y (insert x ys)
          else Cons x (Cons y ys)

insertionSort :: xs:{List {1**a||2} <if _1 > _0 then 1 else 0>||0} -[1]-> {List {1**a||0} <0>||0}
./List-InsertSort-Bad.sq:29: Error:
  Insufficient resources
  when checking ys ::
  {List {1**a||(if _v < y then p23 else p24) + 2} <if _1 > _0 then 1 else 0>||1 + -(fp14 + 0)}
  in
  \xs . 
    match xs with
      Cons y ys -> insert y
                     (insertionSort ys)

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
treeInsert :: x:{1**a||0} -> t:{Tree {1**a||0} <x < _0> <1>||0} -[1]-> {Tree {1**a||0} <x < _0> <0>||0}
treeInsert = \x . \t . 
    match t with
      Leaf -> Node x Leaf Leaf
      Node n l r -> 
        if x < n
          then treeInsert x l
          else treeInsert x r

Stack has not been tested with GHC versions above 8.6, and using 8.8.2, this may fail
Stack has not been tested with Cabal versions above 2.4, but version 3.0.1.0 was found, this may fail
treeInsert :: x:{1**a||0} -> t:{Tree {1**a||0} <x > _0> <1>||0} -[1]-> {Tree {1**a||0} <x < _0> <0>||0}
./BST-Insert-Bad.sq:10: Error:
  Insufficient resources
  when checking l ::
  {Tree {1**a||p7} <x > _0> <1>||1 + -(fp29 + 0)}
  in
  \x . \t . 
      match t with
        Node n l r -> 
          if x < n
            then treeInsert x l
            else
              (?? :: {Tree {1**a||0} <x < _0> <0>||0})

